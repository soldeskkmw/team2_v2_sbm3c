<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- post.xml과 연동되는 Spring interface "dev.mvc.review.ReviewDAOInter" 선언 --> 
<mapper namespace="dev.mvc.review.ReviewDAOInter">

<<<<<<< HEAD
	<!-- 리뷰 등록 -->
	<insert id="create" parameterType="dev.mvc.review.ReviewVO">
		INSERT INTO REVIEW(reviewno, memberno, cateno, reviewtitle, reviewcontent, replycnt, reviewcnt, reviewword,
	                               reviewrdate, reviewfile1, reviewfile1saved, reviewthumb1, reviewsize1)
		VALUES (review_seq.nextval, #{memberno}, #{cateno}, #{reviewtitle}, #{reviewcontent}, #{replycnt}, #{reviewcnt}, #{reviewword},
		            sysdate, #{reviewfile1}, #{reviewfile1saved}, #{reviewthumb1}, #{reviewsize1})
	</insert>
  
  <!-- 특정 카테고리에 등록된 리뷰 목록 -->
  <select id="list_by_cateno" resultType="dev.mvc.review.ReviewVO" parameterType="int">
		SELECT reviewno, memberno, cateno, reviewtitle, reviewcontent, replycnt, reviewcnt, reviewword,
		        reviewrdate, reviewudate, reviewfile1, reviewfile1saved, reviewthumb1, reviewsize1
		FROM review
		WHERE cateno = #{cateno}
		ORDER BY reviewno ASC
  </select>
  
  <!-- 리뷰 조회,  id: read, 입력: reviewno, 리턴: ReviewVO -->
  <select id="read" resultType="dev.mvc.review.ReviewVO" parameterType="int">
		SELECT m.membername,
              v.reviewno, v.memberno, v.cateno, v.reviewtitle, v.reviewcontent, v.replycnt, v.reviewcnt, v.reviewword,
              v.reviewrdate, v.reviewudate, v.reviewfile1, v.reviewfile1saved, v.reviewthumb1, v.reviewsize1
		FROM member m, review v
		WHERE v.reviewno = #{reviewno} AND m.memberno=v.memberno
  </select>
  
  <!-- 카테고리별 검색 목록 -->
  <select id="list_by_cateno_search" resultType="dev.mvc.review.ReviewVO" parameterType="HashMap">
		SELECT reviewno, memberno, cateno, reviewtitle, reviewcontent, replycnt, reviewcnt, reviewword,
		          reviewrdate, reviewudate, reviewfile1, reviewfile1saved, reviewthumb1, reviewsize1
		FROM review
		<choose>
=======
	<!-- 카테고리 별 리뷰 등록 -->
	<insert id="create" parameterType="dev.mvc.review.ReviewVO">
		INSERT INTO review(reviewno, memberno, cateno, reviewtitle, reviewcontent, reviewcnt, reviewword, 
                    rdate, reviewfile1, reviewfile1saved, reviewthumb1,reviewsize1) 
		VALUES (review_seq.nextval, #{memberno}, #{cateno}, #{reviewtitle}, #{reviewcontent}, #{reviewcnt}, #{reviewword},
		            sysdate, #{reviewfile1}, #{reviewfile1saved}, #{reviewthumb1}, #{reviewsize1})
	</insert> 
  
	<!-- 카테고리별 리뷰 전체 목록 -->
	<select id="list_by_cateno" resultType="dev.mvc.review.ReviewVO" parameterType="int">
	  SELECT reviewno, memberno, cateno, reviewtitle, reviewcontent, reviewcnt, reviewword, 
              rdate, udate, reviewfile1, reviewfile1saved, reviewthumb1,reviewsize1
	  FROM review
	  WHERE cateno = #{cateno}
	  ORDER BY reviewno
	</select>

	<!-- 카테고리별 검색 목록 -->
  <select id="list_by_cateno_search" resultType="dev.mvc.review.ReviewVO" parameterType="HashMap">
    SELECT reviewno, memberno, cateno, postno, reviewtitle, reviewcontent, cnt, reviewword, rdate, udate
    FROM review
    <choose>
>>>>>>> e4cf39784193f12e790d7b6a5d51711db347cc8f
      <when test="reviewword == null or reviewword == ''"> <!-- 검색하지 않는 경우 -->
        WHERE cateno=#{cateno}
      </when>
      <otherwise> <!-- 검색하는 경우 -->
<<<<<<< HEAD
        WHERE cateno=#{cateno} AND (UPPER(reviewtitle) LIKE '%' || #{reviewword} || '%' 
                                                  OR UPPER(reviewcontent) LIKE '%' || #{reviewword} || '%' 
                                                  OR UPPER(reviewword) LIKE '%' || #{reviewword} || '%')
      </otherwise>
    </choose>
    ORDER BY reviewno ASC
  </select>

  <!-- 카테고리별 검색 레코드 갯수 -->
  <select id="search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM review
    <choose>
      <when test="reviewword == null or reviewword == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
        WHERE cateno=#{cateno}
      </when>
      <otherwise> <!-- 검색하는 경우 -->
        WHERE cateno=#{cateno} AND (UPPER(reviewtitle) LIKE '%' || #{reviewword} || '%' 
                                                  OR UPPER(reviewcontent) LIKE '%' || #{reviewword} || '%' 
                                                  OR UPPER(reviewword) LIKE '%' || #{reviewword} || '%')
      </otherwise>
    </choose>
  </select>
  
  <!-- 카테고리별 검색 목록 + 페이징 + 메인 이미지 -->   
  <select id="list_by_cateno_search_paging" resultType="dev.mvc.review.ReviewVO" parameterType="HashMap">
   SELECT membername, reviewno, memberno, cateno, reviewtitle, reviewcontent, replycnt, reviewcnt, reviewword,
              reviewrdate, reviewudate, reviewfile1, reviewfile1saved, reviewthumb1, reviewsize1, r
   FROM (
              SELECT membername, reviewno, memberno, cateno, reviewtitle, reviewcontent, replycnt, reviewcnt, reviewword,
                        reviewrdate, reviewudate, reviewfile1, reviewfile1saved, reviewthumb1, reviewsize1, rownum as r
              FROM (
                        SELECT m.membername,
                                  v.reviewno, v.memberno, v.cateno, v.reviewtitle, v.reviewcontent, v.replycnt, v.reviewcnt, v.reviewword,
                                  v.reviewrdate, v.reviewudate, v.reviewfile1, v.reviewfile1saved, v.reviewthumb1, v.reviewsize1
                        FROM member m, review v
                        <choose>
                          <when test="postword == null or postword == ''"> <!-- 검색하지 않는 경우 -->
                             WHERE cateno=#{cateno} AND m.memberno = v.memberno
                          </when>
                          <otherwise>
                            WHERE cateno=#{cateno} AND (UPPER(v.reviewtitle) LIKE '%' || #{reviewword} || '%' 
                                                              OR UPPER(v.reviewcontent) LIKE '%' || #{reviewword} || '%' 
                                                              OR UPPER(v.reviewword) LIKE '%' || #{reviewword} || '%') AND m.memberno = v.memberno
                          </otherwise>
                        </choose>
                        ORDER BY v.reviewno ASC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
    <!--  1 page: WHERE r >= 1 AND r <= 10; 
            2 page: WHERE r >= 11 AND r <= 20;
            3 page: WHERE r >= 21 AND r <= 30; -->
  </select>
  
  <!-- 리뷰 글 수정 -->
  <update id="update_text" parameterType="dev.mvc.review.ReviewVO">
		UPDATE review
		SET reviewno=#{reviewno}, memberno=#{memberno}, cateno=#{cateno}, reviewtitle=#{reviewtitle}, reviewcontent=#{reviewcontent}, reviewword=#{reviewword}, reviewudate=sysdate
		WHERE reviewno=#{reviewno}
  </update>

  <!-- 리뷰 파일 수정 -->
  <update id="update_file" parameterType="dev.mvc.review.ReviewVO">
		UPDATE review
		SET reviewfile1=#{reviewfile1}, reviewfile1saved=#{reviewfile1saved}, reviewthumb1=#{reviewthumb1}, reviewsize1=#{reviewsize1}
		WHERE reviewno=#{reviewno}
  </update>

  <!-- 리뷰 조회수 증가 -->
  <update id="visit_reviewcnt" parameterType="dev.mvc.review.ReviewVO">
		UPDATE review
		SET reviewcnt = reviewcnt + 1
		WHERE reviewno=#{reviewno}
  </update>

  <!-- 리뷰 삭제 -->
  <delete id="delete" parameterType="int">
		DELETE FROM review
		WHERE reviewno=#{reviewno}
  </delete>

  <!-- 리뷰 댓글수 컬럼 업데이트 -->
  <update id="count_by_replycnt" parameterType="dev.mvc.review.ReviewVO">
		UPDATE review
		SET replycnt = (SELECT COUNT(*) as cnt FROM reply WHERE reviewno=#{reviewno})
		WHERE reviewno =#{reviewno}
  </update>

</mapper>

=======
        WHERE cateno=#{cateno} AND (UPPER(reviewtitle) LIKE '%' || #{reviewtitle} || '%' 
                                                  OR UPPER(reviewcontent) LIKE '%' || #{reviewcontent} || '%' 
                                                  OR UPPER(reviewword) LIKE '%' || #{reviewword} || '%')
      </otherwise>
    </choose>
    ORDER BY reviewno ASC
  </select>

  <!-- 카테고리별 검색 레코드 갯수 -->
  <select id="search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM review
    <choose>
      <when test="reviewword == null or reviewword == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
        WHERE cateno=#{cateno}
      </when>
      <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
        WHERE cateno=#{cateno} AND (UPPER(reviewtitle) LIKE '%' || #{reviewtitle} || '%' 
                                                  OR UPPER(reviewcontent) LIKE '%' || #{reviewcontent} || '%' 
                                                  OR UPPER(reviewword) LIKE '%' || #{reviewword} || '%')
      </otherwise>
    </choose>
  </select>
                        
</mapper>


>>>>>>> e4cf39784193f12e790d7b6a5d51711db347cc8f
